// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Function tests test function parsing 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [
        Parameter {
          "byref": false,
          "kind": "parameter",
          "name": "a",
          "nullable": false,
          "type": null,
          "value": Number {
            "kind": "number",
            "value": "1",
          },
          "variadic": false,
        },
        Parameter {
          "byref": false,
          "kind": "parameter",
          "name": "b",
          "nullable": false,
          "type": Identifier {
            "kind": "identifier",
            "name": "\\\\callable",
            "resolution": "fqn",
          },
          "value": null,
          "variadic": false,
        },
        Parameter {
          "byref": true,
          "kind": "parameter",
          "name": "params",
          "nullable": true,
          "type": Identifier {
            "kind": "identifier",
            "name": "\\\\array",
            "resolution": "fqn",
          },
          "value": null,
          "variadic": true,
        },
      ],
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "byref": true,
      "kind": "function",
      "name": "foo",
      "nullable": true,
      "type": Identifier {
        "kind": "identifier",
        "name": "boolean",
        "resolution": "uqn",
      },
    },
    Assign {
      "kind": "assign",
      "left": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
      "operator": "=",
      "right": Closure {
        "arguments": Array [
          Parameter {
            "byref": false,
            "kind": "parameter",
            "name": "b",
            "nullable": false,
            "type": null,
            "value": null,
            "variadic": false,
          },
        ],
        "body": Block {
          "children": Array [
            Return {
              "expr": Boolean {
                "kind": "boolean",
                "raw": "true",
                "value": true,
              },
              "kind": "return",
            },
          ],
          "kind": "block",
        },
        "byref": true,
        "isStatic": false,
        "kind": "closure",
        "nullable": false,
        "type": Identifier {
          "kind": "identifier",
          "name": "\\\\array",
          "resolution": "fqn",
        },
        "uses": Array [
          Variable {
            "byref": true,
            "curly": false,
            "kind": "variable",
            "name": "c",
          },
          Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "name": "d",
          },
        ],
      },
    },
    Assign {
      "kind": "assign",
      "left": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "name": "b",
      },
      "operator": "=",
      "right": Call {
        "arguments": Array [
          variadic {
            "kind": "variadic",
            "what": Array {
              "items": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
                ConstRef {
                  "kind": "constref",
                  "name": Identifier {
                    "kind": "identifier",
                    "name": "null",
                    "resolution": "uqn",
                  },
                },
                Number {
                  "kind": "number",
                  "value": "1",
                },
                Number {
                  "kind": "number",
                  "value": "2",
                },
                Number {
                  "kind": "number",
                  "value": "3",
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          },
        ],
        "kind": "call",
        "what": Identifier {
          "kind": "identifier",
          "name": "foo",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`Function tests test reserved word for function name error 1`] = `
Program {
  "children": Array [
    _Function {
      "arguments": Array [],
      "body": Block {
        "children": Array [],
        "kind": "block",
      },
      "byref": false,
      "kind": "function",
      "name": false,
      "nullable": false,
      "type": null,
    },
  ],
  "errors": Array [
    Error {
      "expected": 105,
      "kind": "error",
      "line": 1,
      "message": "Parse Error : syntax error, unexpected 'list' (T_LIST), expecting T_STRING on line 1",
      "token": "'list' (T_LIST)",
    },
  ],
  "kind": "program",
}
`;

exports[`Function tests test static closure 1`] = `
Program {
  "children": Array [
    Assign {
      "kind": "assign",
      "left": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "name": "a",
      },
      "operator": "=",
      "right": Closure {
        "arguments": Array [],
        "body": Block {
          "children": Array [],
          "kind": "block",
        },
        "byref": false,
        "isStatic": true,
        "kind": "closure",
        "nullable": false,
        "type": null,
        "uses": Array [],
      },
    },
  ],
  "errors": Array [],
  "kind": "program",
}
`;

exports[`Function tests test variadic error 1`] = `
Program {
  "children": Array [
    Assign {
      "kind": "assign",
      "left": Variable {
        "byref": false,
        "curly": false,
        "kind": "variable",
        "name": "b",
      },
      "operator": "=",
      "right": Call {
        "arguments": Array [
          variadic {
            "kind": "variadic",
            "what": Array {
              "items": Array [
                Number {
                  "kind": "number",
                  "value": "1",
                },
                Number {
                  "kind": "number",
                  "value": "2",
                },
                Number {
                  "kind": "number",
                  "value": "3",
                },
              ],
              "kind": "array",
              "shortForm": true,
            },
          },
          Variable {
            "byref": false,
            "curly": false,
            "kind": "variable",
            "name": "a",
          },
        ],
        "kind": "call",
        "what": Identifier {
          "kind": "identifier",
          "name": "foo",
          "resolution": "uqn",
        },
      },
    },
  ],
  "errors": Array [
    Error {
      "expected": undefined,
      "kind": "error",
      "line": 1,
      "message": "Unexpected argument after a variadic argument on line 1",
      "token": undefined,
    },
  ],
  "kind": "program",
}
`;
